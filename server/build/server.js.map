{"version":3,"sources":["../src/server.js"],"names":["dotenv","require","config","uri","process","env","MONGO_URI","PORT","app","use","bodyParser","json","mongoose","connect","useNewUrlParser","err","Error","console","log","get","req","res","_price","params","price","ItemModel","find","$lte","list","send","post","body","name","image","status","error","findOne","doc","Item","save","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAFA,IAAMA,SAASC,QAAQ,QAAR,EAAkBC,MAAlB,EAAf;;AAGA,IAAMC,MAAMC,QAAQC,GAAR,CAAYC,SAAxB;AACA,IAAMC,OAAOH,QAAQC,GAAR,CAAYE,IAAZ,IAAoB,IAAjC;;AAEA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAH,IAAIC,GAAJ,CAAQ,oBAAK,GAAL,CAAR;;AAEAG,mBAASC,OAAT,CAAiBV,GAAjB,EAAsB,EAAEW,iBAAiB,IAAnB,EAAtB,EAAiD,eAAO;AACtD,MAAIC,GAAJ,EAAS,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;;AAETE,UAAQC,GAAR,CAAY,2BAAZ;AACD,CAJD;;AAMAV,IAAIW,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrC,MAAMC,SAASF,IAAIG,MAAJ,CAAWC,KAA1B;;AAEAC,iBAAUC,IAAV,CAAe,EAAEF,OAAO,EAAEG,MAAML,MAAR,EAAT,EAAf,EAA4C,UAACP,GAAD,EAAMa,IAAN,EAAe;AACzD,QAAIb,GAAJ,EAAS,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACTM,QAAIQ,IAAJ,CAASD,IAAT;AACD,GAHD;AAID,CAPD;;AASApB,IAAIsB,IAAJ,CAAS,cAAT,EAAyB,UAACV,GAAD,EAAMC,GAAN,EAAc;AACrCJ,UAAQC,GAAR,CAAY,UAAZ;AADqC,kBAENE,IAAIW,IAFE;AAAA,MAE7BC,IAF6B,aAE7BA,IAF6B;AAAA,MAEvBC,KAFuB,aAEvBA,KAFuB;AAAA,MAEhBT,KAFgB,aAEhBA,KAFgB;;AAGrC,MAAI,CAACQ,IAAD,IAAS,CAACC,KAAV,IAAmB,CAACT,KAAxB,EAA+B;AAC7BH,QAAIa,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,EAAEM,OAAO,mCAAT,EAArB;AACD;;AAEDV,iBAAUW,OAAV,CAAkB,EAAEJ,MAAMA,IAAR,EAAlB,EAAkC,UAACjB,GAAD,EAAMsB,GAAN,EAAc;AAC9C,QAAItB,GAAJ,EAAS;AACP,YAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD;AACD,QAAIsB,GAAJ,EAAS;AACP,aAAOhB,IAAIa,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,EAAEM,OAAO,gBAAT,EAArB,CAAP;AACD;;AAED,QAAMG,OAAO,IAAIb,cAAJ,CAAc;AACzBO,gBADyB;AAEzBC,kBAFyB;AAGzBT;AAHyB,KAAd,CAAb;;AAMAc,SAAKC,IAAL,CAAU,UAACxB,GAAD,EAAMsB,GAAN,EAAc;AACtB,UAAItB,GAAJ,EAAS,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;;AAETM,UAAIa,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,EAAEQ,QAAF,EAArB;AACD,KAJD;AAKD,GAnBD;AAoBD,CA3BD;;AA6BA7B,IAAIgC,MAAJ,CAAWjC,IAAX,EAAiB,YAAM;AACrBU,UAAQC,GAAR,6BAAsCX,IAAtC;AACD,CAFD","file":"server.js","sourcesContent":["import express from 'express'\r\nimport bodyParser from 'body-parser'\r\nimport mongoose from 'mongoose'\r\nimport cors from 'cors'\r\nconst dotenv = require('dotenv').config()\r\n\r\nimport ItemModel from './models/Item'\r\nconst uri = process.env.MONGO_URI\r\nconst PORT = process.env.PORT || 8000\r\n\r\nconst app = express()\r\napp.use(bodyParser.json())\r\napp.use(cors('*'))\r\n\r\nmongoose.connect(uri, { useNewUrlParser: true }, err => {\r\n  if (err) throw new Error(err)\r\n\r\n  console.log('Connected to the database')\r\n})\r\n\r\napp.get('/price/:price', (req, res) => {\r\n  const _price = req.params.price\r\n\r\n  ItemModel.find({ price: { $lte: _price } }, (err, list) => {\r\n    if (err) throw new Error(err)\r\n    res.send(list)\r\n  })\r\n})\r\n\r\napp.post('/create/item', (req, res) => {\r\n  console.log('this ran')\r\n  const { name, image, price } = req.body\r\n  if (!name || !image || !price) {\r\n    res.status(442).send({ error: 'None of the fields should be null' })\r\n  }\r\n\r\n  ItemModel.findOne({ name: name }, (err, doc) => {\r\n    if (err) {\r\n      throw new Error(err)\r\n    }\r\n    if (doc) {\r\n      return res.status(422).send({ error: 'Name is in use' })\r\n    }\r\n\r\n    const Item = new ItemModel({\r\n      name,\r\n      image,\r\n      price\r\n    })\r\n\r\n    Item.save((err, doc) => {\r\n      if (err) throw new Error(err)\r\n\r\n      res.status(200).send({ doc })\r\n    })\r\n  })\r\n})\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server started at port ${PORT}`)\r\n})\r\n"]}